<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-lazy-init="false">

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${sqlServer.driver}" />
        <property name="jdbcUrl" value="${sqlServer.serverName}" />
        <property name="user" value="${sqlServer.username}" />
        <property name="password" value="${sqlServer.password}" />
        <property name="minPoolSize">
            <value>5</value>
        </property>
        <property name="maxPoolSize">
            <value>20</value>
        </property>
        <property name="maxIdleTime">
            <value>1800</value>
        </property>
        <property name="acquireIncrement">
            <value>2</value>
        </property>
        <property name="maxStatements">
            <value>0</value>
        </property>
        <property name="initialPoolSize">
            <value>2</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>1800</value>
        </property>
        <property name="acquireRetryAttempts">
            <value>30</value>
        </property>
        <property name="breakAfterAcquireFailure">
            <value>true</value>
        </property>
        <property name="testConnectionOnCheckout">
            <value>false</value>
        </property>
    </bean>

    <!-- 可通过注解控制事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" autowire="byType">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 创建SqlSessionFactory，同时指定数据源 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--<property name="configLocation" value="/WEB-INF/mybatis/mybatis-config.xml"></property>-->
    </bean>

    <bean id="mysqlMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.escst.socket.dao.localSqlServer" />
        <property name="annotationClass" value="org.mybatis.spring.annotation.MapperScan"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--<bean id="sqlServerMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value="com.microCredit.lotteryAgent.dao.sqlServerDao" />-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlServerSessionFactory"/>-->
        <!--<property name="annotationClass" value="org.mybatis.spring.annotation.MapperScan"/>-->
    <!--</bean>-->

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--连接99数据库-->
    <bean id="dataSource99" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${sqlServer99.driver}" />
        <property name="jdbcUrl" value="${sqlServer99.serverName}" />
        <property name="user" value="${sqlServer99.username}" />
        <property name="password" value="${sqlServer99.password}" />
        <property name="minPoolSize">
            <value>5</value>
        </property>
        <property name="maxPoolSize">
            <value>20</value>
        </property>
        <property name="maxIdleTime">
            <value>1800</value>
        </property>
        <property name="acquireIncrement">
            <value>2</value>
        </property>
        <property name="maxStatements">
            <value>0</value>
        </property>
        <property name="initialPoolSize">
            <value>2</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>1800</value>
        </property>
        <property name="acquireRetryAttempts">
            <value>30</value>
        </property>
        <property name="breakAfterAcquireFailure">
            <value>true</value>
        </property>
        <property name="testConnectionOnCheckout">
            <value>false</value>
        </property>
    </bean>

    <!-- 可通过注解控制事务 -->
    <!--<tx:annotation-driven transaction-manager="transactionManager2"/>-->

    <bean id="jdbcTemplate99" class="org.springframework.jdbc.core.JdbcTemplate" autowire="byType">
        <property name="dataSource" ref="dataSource99" />
    </bean>

    <!-- 创建SqlSessionFactory，同时指定数据源 -->
    <bean id="sqlSessionFactory99" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource99" />
        <!--<property name="configLocation" value="/WEB-INF/mybatis/mybatis-config.xml"></property>-->
    </bean>

    <bean id="mysqlMapperScannerConfigurer99" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.escst.socket.dao.localSqlServer99" />
        <property name="annotationClass" value="org.mybatis.spring.annotation.MapperScan"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory99"/>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager99"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource99" />
    </bean>

</beans>